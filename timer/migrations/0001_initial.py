# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-19 05:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CheckpointTime',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('zone', models.SmallIntegerField()),
                ('time', models.FloatField()),
                ('stage_time', models.FloatField()),
                ('velocity', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('difficulty', models.IntegerField()),
                ('checkpoints', models.SmallIntegerField()),
                ('type', models.IntegerField()),
                ('author', models.CharField(blank=True, max_length=50)),
                ('bonuses', models.SmallIntegerField()),
                ('active', models.IntegerField()),
                ('prevent_prehop', models.IntegerField()),
                ('enable_baked_triggers', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('steam_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('ip', models.CharField(blank=True, max_length=50)),
                ('date_created', models.DateTimeField()),
                ('date_updated', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stage', models.IntegerField()),
                ('type', models.IntegerField()),
                ('time', models.FloatField()),
                ('date_created', models.DateTimeField()),
                ('is_uploaded', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('length', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(blank=True, max_length=64)),
                ('date_created', models.DateTimeField()),
                ('current_map', models.CharField(blank=True, max_length=64)),
                ('bots_enabled', models.IntegerField()),
                ('key', models.CharField(blank=True, max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Spawn',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('zone', models.SmallIntegerField()),
                ('type', models.SmallIntegerField()),
                ('origin', models.CharField(max_length=75)),
                ('angle', models.CharField(max_length=75)),
                ('velocity', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.SmallIntegerField()),
                ('stage', models.SmallIntegerField()),
                ('time', models.FloatField()),
                ('rank', models.IntegerField()),
                ('date_created', models.DateTimeField()),
                ('date_updated', models.DateTimeField()),
                ('completions', models.IntegerField()),
                ('best_rank', models.IntegerField()),
                ('date_demoted', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('min_cord', models.CharField(max_length=75)),
                ('max_cord', models.CharField(max_length=75)),
                ('target_name', models.CharField(blank=True, max_length=32)),
                ('filter_name', models.CharField(blank=True, max_length=32)),
                ('type', models.IntegerField()),
                ('value', models.IntegerField()),
                ('velocity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MapConfiguration',
            fields=[
                ('map', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='timer.Map')),
                ('config', models.CharField(blank=True, max_length=20000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MapStatistic',
            fields=[
                ('map', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='timer.Map')),
                ('completions', models.IntegerField()),
                ('stage_points', models.IntegerField()),
                ('bonus_points', models.IntegerField()),
                ('map_points', models.IntegerField()),
                ('stage_record_points', models.IntegerField()),
                ('bonus_record_points', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PlayerOption',
            fields=[
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='timer.Player')),
                ('hud_config', models.CharField(blank=True, max_length=32)),
                ('hide_panel', models.IntegerField()),
                ('sounds', models.IntegerField()),
                ('color_scheme', models.IntegerField()),
                ('chat_mode', models.IntegerField()),
                ('teleport_velocity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStatistic',
            fields=[
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='timer.Player')),
                ('percent_complete', models.FloatField()),
                ('complete_maps', models.IntegerField()),
                ('complete_stages', models.IntegerField()),
                ('complete_bonuses', models.IntegerField()),
                ('map_records', models.IntegerField()),
                ('stage_records', models.IntegerField()),
                ('bonus_records', models.IntegerField()),
                ('map_tops', models.IntegerField()),
                ('completion_points', models.IntegerField()),
                ('top_points', models.IntegerField()),
                ('group_points', models.DecimalField(decimal_places=2, max_digits=15)),
                ('map_completion_points', models.IntegerField()),
                ('stage_completion_points', models.IntegerField()),
                ('bonus_completion_points', models.IntegerField()),
                ('top_record_points', models.IntegerField()),
                ('stage_record_points', models.IntegerField()),
                ('bonus_record_points', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='zone',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timer.Map'),
        ),
        migrations.AddField(
            model_name='time',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timer.Map'),
        ),
        migrations.AddField(
            model_name='time',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timer.Player'),
        ),
        migrations.AddField(
            model_name='time',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timer.Server'),
        ),
        migrations.AddField(
            model_name='spawn',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timer.Map'),
        ),
        migrations.AddField(
            model_name='recording',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timer.Map'),
        ),
        migrations.AddField(
            model_name='recording',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timer.Player'),
        ),
        migrations.AddField(
            model_name='checkpointtime',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timer.Map'),
        ),
        migrations.AddField(
            model_name='checkpointtime',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timer.Player'),
        ),
        migrations.AlterUniqueTogether(
            name='time',
            unique_together=set([('map', 'player', 'stage', 'type')]),
        ),
        migrations.AlterIndexTogether(
            name='time',
            index_together=set([('map', 'type', 'stage')]),
        ),
        migrations.AlterUniqueTogether(
            name='spawn',
            unique_together=set([('map', 'zone', 'type')]),
        ),
        migrations.AlterUniqueTogether(
            name='checkpointtime',
            unique_together=set([('player', 'map', 'zone')]),
        ),
    ]
